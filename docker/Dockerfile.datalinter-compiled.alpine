# Alpine Linux based commands
FROM alpine:3.22.0
RUN apk add --update --no-cache jq curl tar gzip make libxml2 tree-sitter
RUN apk add --update --no-cache gnu-libiconv # fix fox EzXML2

# make directories
RUN mkdir -p /tmp
RUN mkdir -p /output
RUN mkdir -p /workspace
RUN mkdir -p /datalinter/workload
RUN mkdir -p /datalinter/knowledge
RUN mkdir -p /datalinter/config
RUN mkdir -p /_config
RUN mkdir -p /_data

# Copy binaries
WORKDIR /
COPY ./build/datalinter /datalinter
COPY ./workload /datalinter/workload
COPY ./knowledge /datalinter/knowledge
COPY ./config /datalinter/config

# Prime dependencies for top level script
RUN datalinter/bin/datalinter /datalinter/workload/data.csv --kb-path /datalinter/knowledge/linting.toml > /dev/null

# Entrypoint (from https://docs.docker.com/reference/dockerfile/#entrypoint)
### ENTRYPOINT ["/datalinter/bin/datalinter", "--kb-path /datalinter/knowledge/linting.toml", "--print-exceptions", "--log-level info", "-t"]

# Tree sitter stuff
RUN mkdir -p /root/dev/
RUN mkdir -p /root/src/
RUN mkdir -p /workspace

WORKDIR /
# Generate /root/.config/tree-sitter/config.json with:
# { "parser-directories": [
#       "/root/dev/",
#       "/root/src/"
#   ], ... }
RUN tree-sitter init-config

# Python parser
WORKDIR /root/dev
RUN git clone https://github.com/tree-sitter/tree-sitter-python
WORKDIR /root/dev/tree-sitter-python
RUN tree-sitter generate

# Julia parser
WORKDIR /root/dev
RUN git clone https://github.com/tree-sitter/tree-sitter-julia
WORKDIR /root/dev/tree-sitter-julia
RUN tree-sitter generate

# C parser
WORKDIR /root/dev
RUN git clone https://github.com/tree-sitter/tree-sitter-c
WORKDIR /root/dev/tree-sitter-c
RUN tree-sitter generate

# GO parser
WORKDIR /root/dev
RUN git clone https://github.com/tree-sitter/tree-sitter-go
WORKDIR /root/dev/tree-sitter-go
RUN tree-sitter generate

# R parser
WORKDIR /root/dev
RUN git clone https://github.com/r-lib/tree-sitter-r
WORKDIR /root/dev/tree-sitter-r
RUN tree-sitter generate

# C-sharp parser
WORKDIR /root/dev
RUN git clone https://github.com/tree-sitter/tree-sitter-c-sharp
WORKDIR /root/dev/tree-sitter-c-sharp
RUN tree-sitter generate

# Java parser
WORKDIR /root/dev
RUN git clone https://github.com/tree-sitter/tree-sitter-java
WORKDIR /root/dev/tree-sitter-java
RUN tree-sitter generate

# Javascript parser
WORKDIR /root/dev
RUN git clone https://github.com/tree-sitter/tree-sitter-javascript
WORKDIR /root/dev/tree-sitter-javascript
RUN tree-sitter generate

# Typescript parser --> FAILS
#WORKDIR /root/dev
#RUN git clone https://github.com/tree-sitter/tree-sitter-typescript
#WORKDIR /root/dev/tree-sitter-typescript
#RUN tree-sitter generate

# Angular parser --> FAILS
#WORKDIR /root/dev
#RUN git clone https://github.com/dlvandenberg/tree-sitter-angular
#WORKDIR /root/dev/tree-sitter-angular
#RUN tree-sitter generate

# HTML parser
WORKDIR /root/dev
RUN git clone https://github.com/tree-sitter/tree-sitter-html
WORKDIR /root/dev/tree-sitter-html
RUN tree-sitter generate

# JSON parser
WORKDIR /root/dev
RUN git clone https://github.com/tree-sitter/tree-sitter-json
WORKDIR /root/dev/tree-sitter-json
RUN tree-sitter generate

WORKDIR /
