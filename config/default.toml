# Section `linters` enables or disables linters. The format is:
# ```
#   [linters]
#     [linter_name_1] = value_1
#     [linter_name_2] = value_2
#     ...
# ```
# Linters are specified through their name and allowed values are those which can be converted to booleans i.e. `true`/`false` or `0`/`1`.
[linters]
    # Google linters
    datetime_as_string = true
    tokenizable_string = true
    number_as_string = true
    zipcodes_as_values = true
    large_outliers = true
    int_as_float = true
    enum_detector = true
    #enum_detector = false
    uncommon_list_lengths = true
    duplicate_examples = true
    empty_example = true
    #empty_example = false
    uncommon_signs = true
    long_tailed_distrib = true
    circular_domain = true

    # Additional linters
    missing_values = true
    negative_values = true


# Section `parameters` gives values to the keyword arguments of the function associated to a specific linter. The format is:
# ```
#   [parameters]
#       [parameters.linter_name]
#           kwarg_1 = value_1
#           kwarg_2 = value_2
#           ...
# ```
# where `kwarg_1`, `kwarg_2` and so on are keyword arguments of the function of the linter named `linter_name`.
[parameters]
    # Google linters
    [parameters.datetime_as_string]
        match_perc = 0.5  # fraction of strings in column that match a date/time format for lint to trigger

    [parameters.tokenizable_string]
        min_tokens = 3    # minimum number of tokens in a string for lint to trigger
        #regexes = ["r\"\\s+\""]  # regexes that split the string into tokens (each regex match is applied separately)
        unused_slot = "a"  # for testing purposes only, will not be used by the data linter

    [parameters.number_as_string]
        match_perc = 0.5  # fraction of strings in column that can be converted to number for lint to trigger

    [parameters.zipcodes_as_values]
        zipcodes=[9000, 9001, 1000, 1010, 1020, 1030, 1040, 1050, 1060, 1070, 1080, 1090, 1100]
        match_perc = 0.99  # fraction of values in column that match zipcode for lint to trigger

    [parameters.large_outliers]

    [parameters.int_as_float]
        # function is `is_int_as_float`, does not use keyword arguments

    [parameters.enum_detector]

    [parameters.uncommon_list_lengths]
        # function is `has_uncommon_list_lengths`, does not use keyword arguments

    [parameters.duplicate_examples]
        # function is `has_duplicates`, does not use keyword arguments

    [parameters.empty_example]
        # function is `is_empty_example`, does not use keyword arguments

    [parameters.uncommon_signs]

    [parameters.long_tailed_distrib]

    [parameters.circular_domain]
        # function is `has_circular_domain`, does not use keyword arguments

    # Additional linters
    [parameters.missing_values]

    [parameters.negative_values]
